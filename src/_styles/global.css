:root {
  --siteMaxWidth: 1400px; /* Might not use this to allow ultrawide users to zoom piano as much as they want*/
  --sitePadding: 2rem;

  --coreFont: "Satoshi", -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica,
    Cantarell, Ubuntu, roboto, noto, arial, sans-serif;
  --displayFont: "Boska", "Times New Roman", Georgia, Garamond, Times, serif;
  --monoFont: "JetBrains Mono", Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;

  --clrPrimary: oklch(100% 0 0);
  --clrDetail: oklch(41.23% 0 0);

  --pianoTrimWidth: 0.5rem;
  --pianoSidePadding: 6.5rem;
  --clrPianoShadow: oklch(from var(--clrPianoBg) calc(l - 0.05) c h);
  --clrFelt: oklch(64.91% 0.226964 22.09);

  --keyWhiteWidth: 3.5rem;
  --clrKeyWhite: oklch(96.9% 0.0053 106.5);
  --clrKeyWhiteShadow: oklch(from var(--clrKeyWhite) calc(l - 0.05) c h);
  --clrKeyWhiteBorder: oklch(from var(--clrKeyWhite) calc(l - 0.7) calc(c + 0.01) calc(h + 1));

  --keyBlackWidth: calc(var(--keyWhiteWidth) * 0.6);
  --keyBlackHeight: calc(var(--keyWhiteWidth) * 3.7);
  --clrKeyBlack: oklch(7.06% 0.0145 82.32);
  --clrKeyBlackShine: oklch(25.65% 0.004 84.58);
}
[data-theme="light"] {
  --clrText: black;
  --clrBg: oklch(96% 0 0);
  --clrBgLight: oklch(86.51% 0 0);
  --clrBorder: oklch(58.77% 0 0);
  --clrPianoBg: oklch(100% 0 0);
  --clrScroll: oklch(from var(--clrBg) calc(l - 0.05) c h);
}
[data-theme="dark"] {
  --clrText: white;
  --clrBg: oklch(17.44% 0.0081 285.53);
  --clrBgLight: oklch(22.73% 0.0081 285.53);
  --clrBorder: #3b3b3b;
  --clrPianoBg: oklch(25.18% 0.0064 34.3);
  --clrScroll: oklch(from var(--clrBg) calc(l - 0.05) c h);
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
html {
  font-family: var(--coreFont);
  font-size: 62.5%;
  color: var(--clrText);
  background-color: var(--clrBg);
  scroll-behavior: smooth;
}
@media (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto;
  }
}
body {
  font-size: 1.6rem;
}
#app {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  min-height: 100dvh;
  padding: 0 var(--sitePadding);
}
nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2rem;
  padding: 2rem 0;
  font-family: var(--displayFont);
}
#nav-logo {
  display: flex;
  align-items: center;
  gap: 2rem;
  font-size: 3rem;
}
#nav-logo img {
  width: 4rem;
  height: 4rem;
}
#nav-controls {
  display: flex;
  align-items: center;
  gap: 2rem;
}
#nav-controls > button {
  display: flex;
  align-items: center;
  justify-content: center;
}
#nav-controls > button svg {
  width: 2rem;
  height: 2rem;
}
main {
  flex-grow: 1;
  padding: 4rem 0;
}
footer {
  padding: 2rem 0;
  color: var(--clrDetail);
  text-align: center;
}
footer a {
  opacity: 0.5;
}
footer a:hover,
footer a:focus-visible {
  opacity: 1;
}
/* DEFAULTS */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--displayFont);
  font-weight: 500;
}
button {
  display: block;
  border: none;
  outline: none;
  background: none;
}
a {
  text-decoration: none;
  color: inherit;
}
img,
svg {
  display: block;
  max-width: 100%;
}
button:not(:disabled) {
  cursor: pointer;
}
ul,
ol {
  list-style: none;
}
dialog {
  margin: auto;
  padding: 2rem;
  width: 80rem;
  font-family: var(--coreFont);
  color: var(--clrText);
  background: var(--clrBgLight);
  border: 1px solid var(--clrBorder);
  border-radius: 0.4rem;
  outline: none;
  overflow: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--clrBg) var(--clrBgLight);
}
dialog::backdrop {
  background-color: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(0.5rem);
}
dialog[open] {
  animation: slidefade 0.2s ease forwards;
}
dialog[open]::backdrop {
  animation: fade 0.2s ease forwards;
}
.dialog-header {
  display: flex;
  justify-content: space-between;
  gap: 2rem;
  padding-bottom: 2rem;
}
.dialog-header button svg {
  width: 2rem;
  height: 2rem;
}
.dialog-content {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}
details[open] summary {
  color: var(--clrPrimary);
}
summary h3 {
  display: inline-block;
}
summary {
  cursor: pointer;
}
.limited-width {
  max-width: var(--siteMaxWidth);
  width: 100%;
  margin: 0 auto;
}
.link {
  color: var(--clrPrimary);
  text-decoration: underline;
}
.detail {
  color: var(--clrDetail);
}
.noselect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}
/* PIANO */
#piano {
  position: relative;
  margin: 0 auto;
  padding: var(--pianoTrimWidth) var(--pianoTrimWidth) 1rem var(--pianoTrimWidth);
  max-width: fit-content;
  background-color: var(--clrPianoBg);
  background-image: url(/assets/noise.png);
  background-size: 96px 96px;
  background-repeat: repeat;
  border-radius: 4rem 4rem 2rem 2rem;
}
#piano::before {
  position: absolute;
  content: "";
  inset: 0 0 -3rem 0;
  background-color: var(--clrPianoShadow);
  background-image: url(/assets/noise.png);
  background-size: 96px 96px;
  background-repeat: repeat;
  border-radius: 4rem 4rem 2rem 2rem;
  z-index: -1;
  box-shadow: 0 2rem 2rem -1rem rgba(0, 0, 0, 0.2);
}
#soundbar {
  height: 4rem;
  background-color: oklch(from var(--clrPianoBg) calc(l - 0.02) c h);
  background-image: url("data:image/svg+xml,%3Csvg width='8' height='8' viewBox='0 0 8 8' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='4' r='2.5' fill='rgba(0,0,0,0.2)'/%3E%3C/svg%3E");
  background-size: 3px 3px;
  border: 0.1rem solid oklch(from var(--clrPianoBg) calc(l - 0.05) c h);
  border-radius: calc(4rem - var(--pianoTrimWidth)) calc(4rem - var(--pianoTrimWidth)) 0 0;
  box-shadow: 0 0 0.1rem black;
}
#piano-header {
  padding: 0 var(--pianoSidePadding);
}
#piano-header h1 {
  font-size: 4rem;
  font-family: var(--displayFont);
  font-weight: 500; /* Medium */
  color: oklch(from var(--clrPianoBg) calc(l - 0.05) c h);
  text-align: center;
}
#control-board {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  padding: 2rem 0;
  color: var(--clrText);
  text-align: center;
}
#transpose-controls {
  position: absolute;
  left: 0;
  display: flex;
  gap: 2rem;
  text-align: center;
}
#transpose-controls::after {
  content: "";
  position: absolute;
  left: 2rem;
  right: 2rem;
  bottom: -1.5rem;
  height: 1rem;
  border: 0.2rem solid var(--clrText);
  border-top: none;
}
#transpose-controls label {
  position: absolute;
  left: 50%;
  bottom: -2rem;
  transform: translateX(-50%);
  padding: 0 0.25rem;
  font-size: 1rem;
  background-color: var(--clrPianoBg);
  z-index: 1;
}
@property --buttonGlow {
  syntax: "<color>";
  inherits: false;
  initial-value: #111;
}
@property --buttonDark {
  syntax: "<color>";
  inherits: false;
  initial-value: #111;
}
.transpose-control {
  --buttonGlow: #111;
  --buttonDark: #111;
  --glow: oklch(from var(--clrPrimary) 1 c h);
  --darker: oklch(from var(--clrPrimary) 0.3 c h);
  position: relative;
  width: 4rem;
  height: 4rem;
  border-radius: 999rem;
  padding: 0.4rem;
  background: conic-gradient(
    var(--buttonGlow),
    var(--buttonDark),
    var(--buttonGlow),
    var(--buttonDark),
    var(--buttonGlow)
  );
  transition: --buttonGlow 0.1s ease, --buttonDark 0.1s ease;
}
.transpose-control:has(button:active),
.transpose-control:has(button:focus-visible) {
  --buttonGlow: var(--glow);
  --buttonDark: var(--darker);
}
.transpose-control button {
  width: 100%;
  height: 100%;
  border-radius: 999rem;
  vertical-align: middle;
  background-color: var(--clrPianoBg);
}
#display {
  padding: 0.5rem 5rem;
  font-family: var(--monoFont);
  font-size: 1.2rem;
  line-height: 1.2;
  font-weight: 100;
  background-color: #111;
  border-radius: 0.4rem;
}
#display svg {
  width: 1.2em;
  height: 1.2em;
}
#screen {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: space-between;
  width: 20ch;
  height: 10ch;
  padding: 1ch;
  text-align: start;
  color: white;
  text-shadow: 0 0 0.5rem white;
  background-color: oklch(from var(--clrPrimary) 0.7 c h);
  box-shadow: inset 0 0 2rem oklch(from var(--clrPrimary) 1 c h / 0.6);
  overflow: hidden;
}
#screen-settings {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1em;
}
.setting {
  display: flex;
  align-items: center;
  gap: 0.5em;
}

#piano-bottom {
  display: flex;
}
.piano-side {
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  gap: 2rem;
  width: var(--pianoSidePadding);
  font-size: 1rem;
  text-align: center;
  overflow: hidden;
}
#volume-label {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 1rem;
}
#volume-track {
  position: relative;
  height: 10rem;
  width: 2rem;
  border-radius: 999rem;
  cursor: pointer;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  touch-action: none;
  background-color: oklch(from var(--clrPianoBg) calc(l - 0.05) c h);
  border: 0.2rem solid oklch(from var(--clrPianoBg) calc(l + 0.05) c h);
}
#volume-track:active {
  cursor: grabbing;
}
#volume-thumb {
  position: absolute;
  bottom: 0;
  left: 50%;
  display: block;
  width: 2rem;
  height: 3rem;
  border-radius: 999rem;
  transform: translateX(-50%);
  background-color: oklch(from var(--clrPianoBg) calc(l + 0.05) c h);
}

#piano-keys-container {
  overflow: hidden;
}
#piano-keys-container::before {
  display: block;
  content: "";
  height: 2rem;
  background: linear-gradient(to top, var(--clrPianoShadow) 70%, transparent);
}
#piano-keys {
  position: relative;
  display: flex;
  background-color: var(--keyBlackShine);
  overflow-x: scroll;
  scrollbar-width: thick;
  scrollbar-color: var(--clrPianoBg) oklch(from var(--clrPianoBg) calc(l - 0.05) c h);
}
.key {
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  font-family: var(--monoFont);
  font-weight: 100;
  line-height: 1.2;
  overflow: hidden;
}
.key:focus-visible .key-core {
  background: oklch(from var(--clrPrimary) calc(l + 0.1) calc(c - 0.05) h / 0.6);
}
.key-core {
  flex-grow: 1;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  padding: 1.5rem 0;
}
.key-white {
  width: var(--keyWhiteWidth);
  height: calc(var(--keyWhiteWidth) * 6);
  color: oklch(from var(--clrKeyWhite) calc(l - 0.2) c h);
  background-color: var(--clrKeyWhiteShadow);
  border-top: 0.3rem solid var(--clrFelt);
  border-right: 1px solid var(--clrKeyWhiteBorder);
  border-left: 1px solid var(--clrKeyWhiteBorder);
  transition: clip-path 0.05s ease-in;
}
.key-white .key-core {
  border-radius: 0 0 0.4rem 0.4rem;
  background: linear-gradient(to bottom, var(--clrKeyWhiteShadow), var(--clrKeyWhite) 2rem);
  box-shadow: 0 0.2rem 0.2rem oklch(from var(--clrKeyWhiteBorder) l c h / 0.1);
}
.key-white .key-bottom {
  height: 5%;
  transition: height 0.05s ease-in;
  z-index: -1;
}
.key-white.playing .key-core {
  background: oklch(from var(--clrKeyWhite) calc(l - 0.025) c h);
}
.key-white.playing .key-bottom {
  height: 2%;
}
.right-L {
  clip-path: polygon(
    0 0,
    calc(100% - (var(--keyBlackWidth) / 2)) 0,
    calc(100% - (var(--keyBlackWidth) / 2)) var(--keyBlackHeight),
    100% var(--keyBlackHeight),
    100% 100%,
    0 100%
  );
}
.right-L.playing {
  clip-path: polygon(
    0 0,
    calc(100% - (var(--keyBlackWidth) / 2)) 0,
    calc(100% - (var(--keyBlackWidth) / 2)) calc(var(--keyBlackHeight) + 2%),
    100% calc(var(--keyBlackHeight) + 2%),
    100% 100%,
    0 100%
  );
}
.double-L {
  clip-path: polygon(
    calc(var(--keyBlackWidth) / 2) 0,
    calc(100% - (var(--keyBlackWidth) / 2)) 0,
    calc(100% - (var(--keyBlackWidth) / 2)) var(--keyBlackHeight),
    100% var(--keyBlackHeight),
    100% 100%,
    0 100%,
    0 var(--keyBlackHeight),
    calc(var(--keyBlackWidth) / 2) var(--keyBlackHeight)
  );
}
.double-L.playing {
  clip-path: polygon(
    calc(var(--keyBlackWidth) / 2) 0,
    calc(100% - (var(--keyBlackWidth) / 2)) 0,
    calc(100% - (var(--keyBlackWidth) / 2)) calc(var(--keyBlackHeight) + 2%),
    100% calc(var(--keyBlackHeight) + 2%),
    100% 100%,
    0 100%,
    0 calc(var(--keyBlackHeight) + 2%),
    calc(var(--keyBlackWidth) / 2) calc(var(--keyBlackHeight) + 2%)
  );
}
.left-L {
  clip-path: polygon(
    calc(var(--keyBlackWidth) / 2) 0,
    100% 0,
    100% 100%,
    0 100%,
    0 var(--keyBlackHeight),
    calc(var(--keyBlackWidth) / 2) var(--keyBlackHeight)
  );
}
.left-L.playing {
  clip-path: polygon(
    calc(var(--keyBlackWidth) / 2) 0,
    100% 0,
    100% 100%,
    0 100%,
    0 calc(var(--keyBlackHeight) + 2%),
    calc(var(--keyBlackWidth) / 2) calc(var(--keyBlackHeight) + 2%)
  );
}
.key-black {
  position: absolute;
  top: 0;
  gap: 1%;
  width: var(--keyBlackWidth);
  height: var(--keyBlackHeight);
  color: oklch(from var(--clrKeyBlack) calc(l + 0.5) c h);
  background-color: var(--clrKeyBlack);
  z-index: 1;
}
.key-black .key-core {
  background: linear-gradient(to bottom, var(--clrKeyBlack), var(--clrKeyBlackShine) 2rem);
  border-radius: 0 0 1rem 1rem;
  box-shadow: inset 0 -0.6rem 0.1rem -0.5rem oklch(from var(--clrKeyBlackShine) calc(l + 0.7) c h);
  transition: box-shadow 0.05s ease-in;
}
.key-black.playing .key-core {
  box-shadow: inset 0 -0.6rem 0.1rem -0.5rem oklch(from var(--clrKeyBlackShine) calc(l + 0.7) c h / 0.4);
}
.key-black .key-bottom {
  height: 10%;
  background-color: var(--clrKeyBlackShine);
  border-radius: 50% 50% 0 0;
  box-shadow: inset 0 0.55rem 0.1rem -0.5rem oklch(from var(--clrKeyBlackShine) calc(l + 0.7) c h / 0.9);
  transition: height 0.05s ease-in;
}
.key-black.playing .key-bottom {
  height: 5%;
  box-shadow: inset 0 0.55rem 0.1rem -0.5rem oklch(from var(--clrKeyBlackShine) calc(l + 0.7) c h / 0.4);
}

/* KEYFRAMES */
@keyframes slidefade {
  0% {
    transform: translateY(40%);
    opacity: 0;
  }
  100% {
    transform: unset;
    opacity: 1;
  }
}
